// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TOrderBellDao is the data access object for table t_order_bell.
type TOrderBellDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns TOrderBellColumns // columns contains all the column names of Table for convenient usage.
}

// TOrderBellColumns defines and stores column names for table t_order_bell.
type TOrderBellColumns struct {
	Id           string // 唯一自增ID
	OrderId      string // 主订单id
	SubOrderId   string // 订单id
	OldServiceId string // 老项目id,升级单专用
	ServiceMoney string // 项目总价
	PayType      string // 支付方式0余额支付1汇付宝支付
	PayMoney     string // 订单金额（分）
	OrderType    string // 订单状态,up为升级单，add为加钟单
	Status       string // 订单状态
	Enabled      string //
	CreatedTime  string // 创建时间
	ModifiedTime string // 更新时间
}

// tOrderBellColumns holds the columns for table t_order_bell.
var tOrderBellColumns = TOrderBellColumns{
	Id:           "id",
	OrderId:      "order_id",
	SubOrderId:   "sub_order_id",
	OldServiceId: "old_service_id",
	ServiceMoney: "service_money",
	PayType:      "pay_type",
	PayMoney:     "pay_money",
	OrderType:    "order_type",
	Status:       "status",
	Enabled:      "enabled",
	CreatedTime:  "created_time",
	ModifiedTime: "modified_time",
}

// NewTOrderBellDao creates and returns a new DAO object for table data access.
func NewTOrderBellDao() *TOrderBellDao {
	return &TOrderBellDao{
		group:   "default",
		table:   "t_order_bell",
		columns: tOrderBellColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TOrderBellDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TOrderBellDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TOrderBellDao) Columns() TOrderBellColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TOrderBellDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TOrderBellDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TOrderBellDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
