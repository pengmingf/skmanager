// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TPayDao is the data access object for table t_pay.
type TPayDao struct {
	table   string      // table is the underlying table name of the DAO.
	group   string      // group is the database configuration group name of current DAO.
	columns TPayColumns // columns contains all the column names of Table for convenient usage.
}

// TPayColumns defines and stores column names for table t_pay.
type TPayColumns struct {
	Id           string // 唯一自增ID
	PreId        string // 预支付id
	BusinessType string // 业务类型,order订单，ord_add加钟，ord_up升级，cz充值
	BusinessId   string // 对应类型的业务id
	PayStatus    string // 支付状态 create创建订单，支付失败fail，支付成功success
	BackTime     string // 回调时间
	BackContent  string // 回调内容
	BackType     string // 回调方式，search主动查询，callback三方回调
	Enabled      string //
	CreatedTime  string // 创建时间
	ModifiedTime string // 更新时间
}

// tPayColumns holds the columns for table t_pay.
var tPayColumns = TPayColumns{
	Id:           "id",
	PreId:        "pre_id",
	BusinessType: "business_type",
	BusinessId:   "business_id",
	PayStatus:    "pay_status",
	BackTime:     "back_time",
	BackContent:  "back_content",
	BackType:     "back_type",
	Enabled:      "enabled",
	CreatedTime:  "created_time",
	ModifiedTime: "modified_time",
}

// NewTPayDao creates and returns a new DAO object for table data access.
func NewTPayDao() *TPayDao {
	return &TPayDao{
		group:   "default",
		table:   "t_pay",
		columns: tPayColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TPayDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TPayDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TPayDao) Columns() TPayColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TPayDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TPayDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TPayDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
