// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TOpinionFeedbackDao is the data access object for table t_opinion_feedback.
type TOpinionFeedbackDao struct {
	table   string                  // table is the underlying table name of the DAO.
	group   string                  // group is the database configuration group name of current DAO.
	columns TOpinionFeedbackColumns // columns contains all the column names of Table for convenient usage.
}

// TOpinionFeedbackColumns defines and stores column names for table t_opinion_feedback.
type TOpinionFeedbackColumns struct {
	Id           string // 唯一自增ID
	UserId       string // 用户openid
	Content      string // 反馈内容
	Pic          string // 图片
	Phone        string // 手机号
	Enabled      string //
	CreatedTime  string // 创建时间
	ModifiedTime string // 更新时间
}

// tOpinionFeedbackColumns holds the columns for table t_opinion_feedback.
var tOpinionFeedbackColumns = TOpinionFeedbackColumns{
	Id:           "id",
	UserId:       "user_id",
	Content:      "content",
	Pic:          "pic",
	Phone:        "phone",
	Enabled:      "enabled",
	CreatedTime:  "created_time",
	ModifiedTime: "modified_time",
}

// NewTOpinionFeedbackDao creates and returns a new DAO object for table data access.
func NewTOpinionFeedbackDao() *TOpinionFeedbackDao {
	return &TOpinionFeedbackDao{
		group:   "default",
		table:   "t_opinion_feedback",
		columns: tOpinionFeedbackColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TOpinionFeedbackDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TOpinionFeedbackDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TOpinionFeedbackDao) Columns() TOpinionFeedbackColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TOpinionFeedbackDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TOpinionFeedbackDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TOpinionFeedbackDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
