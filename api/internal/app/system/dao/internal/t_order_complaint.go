// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TOrderComplaintDao is the data access object for table t_order_complaint.
type TOrderComplaintDao struct {
	table   string                 // table is the underlying table name of the DAO.
	group   string                 // group is the database configuration group name of current DAO.
	columns TOrderComplaintColumns // columns contains all the column names of Table for convenient usage.
}

// TOrderComplaintColumns defines and stores column names for table t_order_complaint.
type TOrderComplaintColumns struct {
	Id             string // 唯一自增ID
	OrderId        string // 订单id
	MasseurId      string // 服务人id
	UserId         string // 用户id
	MasseurName    string // 技师名称
	ComplaintLabel string // 投诉类型
	Content        string // 投诉内容
	Pic            string // 上传凭证
	Phone          string // 联系方式
	Status         string // 状态
	CreatedTime    string // 创建时间
	ModifiedTime   string // 更新时间
}

// tOrderComplaintColumns holds the columns for table t_order_complaint.
var tOrderComplaintColumns = TOrderComplaintColumns{
	Id:             "id",
	OrderId:        "order_id",
	MasseurId:      "masseur_id",
	UserId:         "user_id",
	MasseurName:    "masseur_name",
	ComplaintLabel: "complaint_label",
	Content:        "content",
	Pic:            "pic",
	Phone:          "phone",
	Status:         "status",
	CreatedTime:    "created_time",
	ModifiedTime:   "modified_time",
}

// NewTOrderComplaintDao creates and returns a new DAO object for table data access.
func NewTOrderComplaintDao() *TOrderComplaintDao {
	return &TOrderComplaintDao{
		group:   "default",
		table:   "t_order_complaint",
		columns: tOrderComplaintColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TOrderComplaintDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TOrderComplaintDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TOrderComplaintDao) Columns() TOrderComplaintColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TOrderComplaintDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TOrderComplaintDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TOrderComplaintDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
