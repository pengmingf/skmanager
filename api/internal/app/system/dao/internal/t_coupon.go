// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TCouponDao is the data access object for table t_coupon.
type TCouponDao struct {
	table   string         // table is the underlying table name of the DAO.
	group   string         // group is the database configuration group name of current DAO.
	columns TCouponColumns // columns contains all the column names of Table for convenient usage.
}

// TCouponColumns defines and stores column names for table t_coupon.
type TCouponColumns struct {
	Id            string // 唯一自增ID
	CouponId      string // 优惠券id
	FullMoney     string // 满多少可以使用
	SubtractMoney string // 减多少钱
	Scene         string // 应用场景，注册时register,rg_invite邀请注册时,first_xd首次下单
	Enabled       string // 是否有效 0无效
}

// tCouponColumns holds the columns for table t_coupon.
var tCouponColumns = TCouponColumns{
	Id:            "id",
	CouponId:      "coupon_id",
	FullMoney:     "full_money",
	SubtractMoney: "subtract_money",
	Scene:         "scene",
	Enabled:       "enabled",
}

// NewTCouponDao creates and returns a new DAO object for table data access.
func NewTCouponDao() *TCouponDao {
	return &TCouponDao{
		group:   "default",
		table:   "t_coupon",
		columns: tCouponColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TCouponDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TCouponDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TCouponDao) Columns() TCouponColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TCouponDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TCouponDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TCouponDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
