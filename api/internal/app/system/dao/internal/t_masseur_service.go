// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// TMasseurServiceDao is the data access object for table t_masseur_service.
type TMasseurServiceDao struct {
	table   string                 // table is the underlying table name of the DAO.
	group   string                 // group is the database configuration group name of current DAO.
	columns TMasseurServiceColumns // columns contains all the column names of Table for convenient usage.
}

// TMasseurServiceColumns defines and stores column names for table t_masseur_service.
type TMasseurServiceColumns struct {
	Id           string // 唯一自增ID
	ServiceId    string // 服务id
	MasseurId    string // 技师id
	Status       string // 状态 0软删除 1使用
	CreatedTime  string // 创建时间
	ModifiedTime string // 更新时间
}

// tMasseurServiceColumns holds the columns for table t_masseur_service.
var tMasseurServiceColumns = TMasseurServiceColumns{
	Id:           "id",
	ServiceId:    "service_id",
	MasseurId:    "masseur_id",
	Status:       "status",
	CreatedTime:  "created_time",
	ModifiedTime: "modified_time",
}

// NewTMasseurServiceDao creates and returns a new DAO object for table data access.
func NewTMasseurServiceDao() *TMasseurServiceDao {
	return &TMasseurServiceDao{
		group:   "default",
		table:   "t_masseur_service",
		columns: tMasseurServiceColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *TMasseurServiceDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *TMasseurServiceDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *TMasseurServiceDao) Columns() TMasseurServiceColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *TMasseurServiceDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *TMasseurServiceDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *TMasseurServiceDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
